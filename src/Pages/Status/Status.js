import { useState, useRef, useEffect } from "react";
import { useSearchParams } from 'react-router-dom';
import { useNavigate } from "react-router-dom";
import { Link } from "react-router-dom";

import styles from "./status.module.css";
import buttons from "Blocks/Form/buttons.module.css";

import Page from "Blocks/Page/Page";
import Preloader from "Blocks/Preloader/Preloader";
import Alert from "Blocks/Alert/Alert";

import { getPayment } from "Api";
import { formatAmount } from "utils";


const REQUEST_TIMEOUT = 5000;

const getStatusText = status => {
    switch (status) {
        case 100:
            return "–æ–∂–∏–¥–∞–µ—Ç –æ–ø–ª–∞—Ç—ã";
        case 200:
            return "–æ–ø–ª–∞—á–µ–Ω. –ü–µ—Ä–µ–≤–æ–¥–∏–º –¥–µ–Ω—å–≥–∏ –Ω–∞ –±–∞–ª–∞–Ω—Å";
        case 600:
            return "–æ–ø–ª–∞—á–µ–Ω. –î–µ–Ω—å–≥–∏ –ø–µ—Ä–µ–≤–µ–¥–µ–Ω—ã –Ω–∞ –±–∞–ª–∞–Ω—Å";
        case 400:
            return "–Ω–µ –æ–ø–ª–∞—á–µ–Ω. –ù–µ —É–¥–∞–ª–æ—Å—å —Å–ø–∏—Å–∞—Ç—å –¥–µ–Ω—å–≥–∏";
        default:
            return "–æ–∂–∏–¥–∞–µ—Ç –æ–ø–ª–∞—Ç—ã";
    }

}

const Order = ({ payment }) => (
    <>
        <div className={styles.line}></div>

        <div className={styles.amount}>
            ‚ÇΩ‚Äâ{formatAmount(payment.processingCurrencyAmount)}
        </div>
        <div className={styles.localAmount}>
            ‚Ç∏‚Äâ{formatAmount(payment.amount)}
        </div>
        <div className={styles.status} type={payment.status}>
            –ó–∞–∫–∞–∑ {getStatusText(payment.status)}
        </div>

        <div className={styles.line}></div>

        {(payment.status === 600 || payment.status === 400) && <div className={styles.footer}>
            <Link to="/" className={buttons.Button} type={payment.status === 600 ? "success" : "danger"}>
                üëà –ü–æ–≤—Ç–æ—Ä–∏—Ç—å –æ–ø–ª–∞—Ç—É
            </Link>
        </div>}

    </>
);


function Status() {
    const timeoutID = useRef(null);
    const navigate = useNavigate();

    const [searchParams] = useSearchParams();
    const id = searchParams.get('id');

    const [payment, setPayment] = useState({});
    const [fetching, setFetching] = useState(true);
    const [error, setError] = useState(false);

    useEffect(() => {
        if (!id) {
            navigate('/');
            return;
        }

        document.title = "–ü–ª–∞—Ç—ë–∂ #" + id;

        const fetchPaymentData = async () => {
            try {
                const response = await getPayment(id);
                if (response.status) {
                    setPayment(response);

                    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ —Å—Ç–∞—Ç—É—Å —Ñ–∏–Ω–∞–ª—å–Ω—ã–º –ø—Ä—è–º–æ –ø–æ—Å–ª–µ –ø–æ–ª—É—á–µ–Ω–∏—è –æ—Ç–≤–µ—Ç–∞
                    if (response.status !== 600 && response.status !== 400) {
                        console.log(response.status)
                        // –ï—Å–ª–∏ —Å—Ç–∞—Ç—É—Å –Ω–µ —Ñ–∏–Ω–∞–ª—å–Ω—ã–π, –ø–ª–∞–Ω–∏—Ä—É–µ–º —Å–ª–µ–¥—É—é—â–∏–π –∑–∞–ø—Ä–æ—Å
                        timeoutID.current = setTimeout(fetchPaymentData, REQUEST_TIMEOUT);
                    } else {
                        // –ï—Å–ª–∏ —Å—Ç–∞—Ç—É—Å —Ñ–∏–Ω–∞–ª—å–Ω—ã–π, –æ—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∏–Ω–¥–∏–∫–∞—Ü–∏—é –∑–∞–≥—Ä—É–∑–∫–∏
                        setFetching(false);
                    }
                } else {
                    setError("–û—à–∏–±–∫–∞ ‚Äî –Ω–µ –≤—ã—à–ª–æ –ø—Ä–æ—á–∏—Ç–∞—Ç—å –¥–∞–Ω–Ω—ã–µ –æ –ø–ª–∞—Ç–µ–∂–µ");
                    setFetching(false);
                }
            } catch (error) {
                setError("–û—à–∏–±–∫–∞ ‚Äî –Ω–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å –¥–∞–Ω–Ω—ã–µ –æ –ø–ª–∞—Ç–µ–∂–µ");
                setFetching(false);
            }
        };

        fetchPaymentData();

        // –û—á–∏—Å—Ç–∫–∞ —Ç–∞–π–º–µ—Ä–∞ –ø—Ä–∏ —Ä–∞–∑–º–æ–Ω—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞
        return () => {
            if (timeoutID.current) clearTimeout(timeoutID.current);
        };
    }, [id, navigate]); // –ó–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ useEffect


    return (
        <div>
            <>
                <Page
                    title={`–ü–ª–∞—Ç–µ–∂ #${id}`}
                    subtitle={payment.status ? `–û—Ç –∫–ª–∏–µ–Ω—Ç–∞ ${payment.account} –ø–æ –∑–∞–∫–∞–∑—É #${payment.orderId}` : ""}
                    type={fetching ? "pending" : (payment.status === 600 ? "success" : (payment.status === 400 ? "error" : "pending"))}>

                    <div className={styles.container}>
                        {error && <Alert message={error} type="danger" />}

                        {payment.status && <Order payment={payment} />}


                        {fetching && <div className={styles.preloader}>
                            <Preloader text="–ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–∞–Ω–Ω—ã–µ –æ –ø–ª–∞—Ç–µ–∂–µ..." size="small" />
                        </div>}

                        <div className={styles.help}>
                            <h3>–ï—Å—Ç—å –≤–æ–ø—Ä–æ—Å—ã?</h3>
                            <div className={styles.item}>
                                <p>–û–ø–ª–∞—Ç–∞ –Ω–µ –ø—Ä–æ—à–ª–∞ –∏–ª–∏ –µ—Å—Ç—å –≤–æ–ø—Ä–æ—Å—ã –ø–æ –ø–ª–∞—Ç–µ–∂–∞–º? –û—Ç–≤–µ—Ç–∏–º –æ–ø–µ—Ä–∞—Ç–∏–≤–Ω–æ</p>
                                <a href="https://Yortakz.t.me" type="tg" target="_blank" rel="noopener noreferrer">
                                    –í —Ç–µ–ª–µ–≥—Ä–∞–º @Yortakz
                                </a>
                            </div>
                            <div className={styles.item}>
                                <p>–í—Å–µ –¥—Ä—É–≥–∏–µ –≤–æ–ø—Ä–æ—Å—ã –ø–æ –¥–æ—Å—Ç–∞–≤–∫–µ –∏ –æ–±—Å–ª—É–∂–∏–≤–∞–Ω–∏—é –Ω–∞–ø–∏—à–∏</p>
                                <a href="mailto:infokz@amway.com " type="mail" target="_blank" rel="noopener noreferrer">
                                    –ù–∞ –ø–æ—á—Ç—É infokz@amway.com
                                </a>
                            </div>
                        </div>
                    </div>

                </Page>
            </>
        </div>
    );
}

export default Status;
